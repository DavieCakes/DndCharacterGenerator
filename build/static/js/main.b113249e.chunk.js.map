{"version":3,"sources":["models/DnDCharacter/Ability.js","models/DnDCharacter/ProficiencyBonus.js","models/DnDCharacter/DnDCharacter.js","models/DnDCharacter/InitialState.js","models/DnDCharacter/Skill.js","models/DnDCharacter/Save.js","utils/Generators.js","store/CharacterStore.js","components/StoreTester.js","App.js","serviceWorker.js","store/configureStore.js","index.js"],"names":["Ability","name","baseValue","bonuses","value","this","BaseValue","Bonuses","reduce","sum","e","Math","floor","FinalValue","Array","isArray","console","log","serialize","finalValue","modifier","Modifier","ProficiencyBonus","_value","Character","oldState","abilities","strength","dexterity","intelligence","constitution","charisma","wisdom","skills","athletics","derivedAbility","isProficient","acrobatics","sleight_of_hand","stealth","arcana","history","investigation","nature","religion","animal_handling","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","saves","proficiencyBonus","proficiencySelections","wrapper","Object","keys","forEach","oldAbility","oldSkill","derivedProficiency","profBonus","IsProficient","Modifer","Name","Skill","oldSave","Save","returnData","abilityName","skillName","saveName","Generators","generateDnDCharacter","character","abilityRolls","i","rolls","j","push","random","sort","splice","pop","skillProficiencies","fill","length","initialState","characterData","actionCreators","updateAbility","dispatch","type","toUpdate","updateSkill","updateSave","updateProficiencyBonus","generate","reducer","state","action","model","undefined","StoreTester","Fragment","onClick","props","Component","CharacterContainer","React","PureComponent","ProficiencyBonusContainer","onValueChange","event","preventDefault","parseInt","target","attributeTitle","attributeCollection","className","onChange","max","min","SkillsContainer","map","skill","key","icon","AttributeContainer","AbilitiesContainer","ability","SavesContainer","save","connect","characterGenerator","bindActionCreators","App","Boolean","window","location","hostname","match","store","reducers","CharacterGenerator","middleware","thunk","rootReducer","combineReducers","createStore","applyMiddleware","configureStore","createBrowserHistory","initialReduxState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4TAAe,SAASA,IAA0D,IAAD,yDAAJ,GAAI,IAA/CC,YAA+C,MAAxC,GAAwC,MAApCC,iBAAoC,MAAxB,GAAwB,MAApBC,eAAoB,MAAV,GAAU,EAG/E,MAAO,CACL,gBACE,OAAOD,GAET,cAAcE,GACZF,EAAYE,GAEd,iBACE,OAAOC,KAAKC,UAAYD,KAAKE,QAAQC,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,IAEnE,eACE,OAAOC,KAAKC,MAAMP,KAAKQ,WAAa,GAAK,GAE3C,cACI,OAAOV,GAEX,YAAYC,GAENU,MAAMC,QAAQX,IAChBY,QAAQC,IAAI,qCAEdd,EAAUC,GAEZ,WACE,OAAOH,GAETiB,UA1BK,WA2BH,MAAO,CACLhB,UAAWG,KAAKC,UAChBH,QAASE,KAAKE,QACdY,WAAYd,KAAKQ,WACjBO,SAAUf,KAAKgB,YClCR,SAASC,IAAoC,IAAD,0DAAJ,IAAblB,aAAiB,MAAT,EAAS,EACzD,MAAO,CACL,iBACE,OAAOA,GAET,eAAemB,GAKTA,EAAS,EACXP,QAAQC,IAAI,gCAGdb,EAAQmB,ICRC,SAASC,IAAyC,IAA/BC,EAA8B,uDCLvD,CACLC,UAAW,CACTC,SAAU,CAAExB,QAAS,GAAID,UAAW,GAAIiB,WAAY,GAAIC,SAAU,GAClEQ,UAAW,CAAEzB,QAAS,GAAIgB,WAAY,GAAIC,SAAU,EAAGlB,UAAW,IAClE2B,aAAc,CAAE1B,QAAS,GAAIgB,WAAY,GAAIC,SAAU,EAAGlB,UAAW,IACrE4B,aAAc,CAAE3B,QAAS,GAAIgB,WAAY,GAAIC,SAAU,EAAGlB,UAAW,IACrE6B,SAAU,CAAE5B,QAAS,GAAIgB,WAAY,GAAIC,SAAU,EAAGlB,UAAW,IACjE8B,OAAQ,CAAE7B,QAAS,GAAIgB,WAAY,GAAIC,SAAU,EAAGlB,UAAW,KAEjE+B,OAAQ,CACNC,UAAW,CAAEC,eAAgB,WAAYC,cAAc,EAAOhB,SAAU,GACxEiB,WAAY,CAAEF,eAAgB,YAAaC,cAAc,EAAOhB,SAAU,GAC1EkB,gBAAiB,CACfH,eAAgB,YAChBC,cAAc,EACdhB,SAAU,GAEZmB,QAAS,CAAEJ,eAAgB,YAAaC,cAAc,EAAOhB,SAAU,GACvEoB,OAAQ,CAAEL,eAAgB,eAAgBC,cAAc,EAAOhB,SAAU,GACzEqB,QAAS,CAAEN,eAAgB,eAAgBC,cAAc,EAAOhB,SAAU,GAC1EsB,cAAe,CACbP,eAAgB,eAChBC,cAAc,EACdhB,SAAU,GAEZuB,OAAQ,CAAER,eAAgB,eAAgBC,cAAc,EAAOhB,SAAU,GACzEwB,SAAU,CAAET,eAAgB,eAAgBC,cAAc,EAAOhB,SAAU,GAC3EyB,gBAAiB,CAAEV,eAAgB,SAAUC,cAAc,EAAOhB,SAAU,GAC5E0B,QAAS,CAAEX,eAAgB,SAAUC,cAAc,EAAOhB,SAAU,GACpE2B,SAAU,CAAEZ,eAAgB,SAAUC,cAAc,EAAOhB,SAAU,GACrE4B,WAAY,CAAEb,eAAgB,SAAUC,cAAc,EAAOhB,SAAU,GACvE6B,SAAU,CAAEd,eAAgB,SAAUC,cAAc,EAAOhB,SAAU,GACrE8B,UAAW,CAAEf,eAAgB,WAAYC,cAAc,EAAOhB,SAAU,GACxE+B,aAAc,CAAEhB,eAAgB,WAAYC,cAAc,EAAOhB,SAAU,GAC3EgC,YAAa,CAAEjB,eAAgB,WAAYC,cAAc,EAAOhB,SAAU,GAC1EiC,WAAY,CAAElB,eAAgB,WAAYC,cAAc,EAAOhB,SAAU,IAE3EkC,MAAO,CACL3B,SAAU,CACRxB,QAAS,GACTD,UAAW,GACXiB,WAAY,GACZiB,cAAc,EACdhB,SAAU,GAEZQ,UAAW,CACTzB,QAAS,GACTgB,WAAY,GACZC,SAAU,EACVgB,cAAc,EACdlC,UAAW,IAEb2B,aAAc,CACZ1B,QAAS,GACTgB,WAAY,GACZC,SAAU,EACVgB,cAAc,EACdlC,UAAW,IAEb4B,aAAc,CACZ3B,QAAS,GACTgB,WAAY,GACZC,SAAU,EACVgB,cAAc,EACdlC,UAAW,IAEb6B,SAAU,CACR5B,QAAS,GACTgB,WAAY,GACZC,SAAU,EACVgB,cAAc,EACdlC,UAAW,IAEb8B,OAAQ,CACN7B,QAAS,GACTgB,WAAY,GACZC,SAAU,EACVgB,cAAc,EACdlC,UAAW,KAGfqD,iBAAkB,EAClBC,sBAAuB,GDzEnBC,EAAU,CAGhBA,UAAoB,IAkEpB,OAjEAC,OAAOC,KAAKlC,EAASC,WAAWkC,SAAQ,SAAAlD,GACtC,IAAMmD,EAAapC,EAASC,UAAUhB,GACtC+C,EAAQ/B,UAAUhB,GAAKV,EAAQ,CAC7BC,KAAMS,EACNR,UAAW2D,EAAW3D,UACtBC,QAAS0D,EAAW1D,aAKxBsD,EAAQF,iBAAmBjC,EAAiB,CAAClB,MAAOqB,EAAS8B,mBAG7DE,EAAQxB,OAAS,GACjByB,OAAOC,KAAKlC,EAASQ,QAAQ2B,SAAQ,SAAAlD,GACnC,IAAMoD,EAAWrC,EAASQ,OAAOvB,GACjC+C,EAAQxB,OAAOvB,GE3BJ,WAMN,IAAD,yDAAJ,GAAI,IALNT,YAKM,MALC,GAKD,MAJNE,eAIM,MAJI,GAIJ,MAHNiC,oBAGM,aAFND,sBAEM,MAFWnC,IAEX,MADN+D,0BACM,MADezC,IACf,EACN,MAAO,CACL,YAAYlB,GACVD,EAAUC,GAEZ,cACE,OAAOD,GAET,iBAAiBC,GACfgC,EAAehC,GAEjB,mBACE,OAAOgC,GAIT,WACE,OAAOnC,GAIT,iBACE,IAAM+D,EAAa3D,KAAK4D,aAAeF,EAAmBlD,WAAa,EACvE,OAAOsB,EAAetB,WACpBR,KAAKE,QAAQC,QAAO,SAACC,EAAKC,GAAN,OAAYA,EAAID,IAAK,GAAKuD,GAElD,cACE,OAAOrD,KAAKC,MAAMP,KAAKQ,WAAa,GAAK,GAE3CK,UA5BK,WA6BH,MAAO,CACLf,QAASE,KAAKE,QACd6B,aAAc/B,KAAK4D,aACnB9C,WAAYd,KAAKQ,WACjBO,SAAUf,KAAK6D,QACfjE,KAAMI,KAAK8D,KACXhC,eAAgBA,EAAegC,QFffC,CAAM,CACxBnE,KAAMS,EACNP,QAAS2D,EAAS3D,QAClBiC,aAAc0B,EAAS1B,aAGvB2B,mBAAoBN,EAAQF,iBAC5BpB,eAAgBsB,EAAQ/B,UAAUoC,EAAS3B,qBAK/CsB,EAAQH,MAAQ,GAEhBI,OAAOC,KAAKlC,EAAS6B,OAAOM,SAAS,SAAAlD,GACnC,IAAM2D,EAAU5C,EAAS6B,MAAM5C,GAC/B+C,EAAQH,MAAM5C,GG3CH,WAMN,IAAD,yDAAJ,GAAI,IALNT,YAKM,MALC,GAKD,MAJNE,eAIM,MAJI,GAIJ,MAHNiC,oBAGM,aAFND,sBAEM,MAFWnC,IAEX,MADN+D,0BACM,MADezC,IACf,EACN,MAAO,CACL,YAAYlB,GACVD,EAAUC,GAEZ,cACE,OAAOD,GAET,iBAAiBC,GACfgC,EAAehC,GAEjB,mBACE,OAAOgC,GAIT,WACE,OAAOnC,GAIT,iBACE,IAAM+D,EAAa3D,KAAK4D,aAAeF,EAAmBlD,WAAa,EACvE,OAAOsB,EAAetB,WACpBR,KAAKE,QAAQC,QAAO,SAACC,EAAKC,GAAN,OAAYA,EAAID,IAAK,GAAKuD,GAElD,cACE,OAAOrD,KAAKC,MAAMP,KAAKQ,WAAa,GAAK,GAE3CK,UA5BK,WA6BH,MAAO,CACLf,QAASE,KAAKE,QACd6B,aAAc/B,KAAK4D,aACnB9C,WAAYd,KAAKQ,WACjBO,SAAUf,KAAK6D,QACfjE,KAAMI,KAAK8D,KACXhC,eAAgBA,EAAegC,QHChBG,CAAK,CACtBrE,KAAMS,EACNP,QAASkE,EAAQlE,QACjBiC,aAAciC,EAAQjC,aAGtB2B,mBAAoBN,EAAQF,iBAC5BpB,eAAgBsB,EAAQ/B,UAAUhB,QAKtC+C,EAAQvC,UAAa,WAAW,IAAD,OACvBqD,EAAa,GAgBnB,OAfAA,EAAWhB,iBAAmBlD,KAAKkD,iBAAiB1C,WACpD0D,EAAW7C,UAAY,GACvBgC,OAAOC,KAAKtD,KAAKqB,WAAWkC,SAAQ,SAAAY,GAClCD,EAAW7C,UAAU8C,GAAe,EAAK9C,UACvC8C,GACAtD,eAEJqD,EAAWtC,OAAS,GACpByB,OAAOC,KAAKtD,KAAK4B,QAAQ2B,SAAQ,SAAAa,GAC/BF,EAAWtC,OAAOwC,GAAa,EAAKxC,OAAOwC,GAAWvD,eAExDqD,EAAWjB,MAAQ,GACnBI,OAAOC,KAAKtD,KAAKiD,OAAOM,SAAQ,SAAAc,GAC9BH,EAAWjB,MAAMoB,GAAY,EAAKpB,MAAMoB,GAAUxD,eAE7CqD,GAIFd,EI7ET,IAuCekB,EAvCI,CACjBC,qBAAsB,WAMpB,IAJA,IAAMC,EAAYrD,IAGZsD,EAAe,GACZC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAME,KAAKvE,KAAKC,MAAsB,EAAhBD,KAAKwE,UAAgB,GAE7CH,EAAMI,OACNJ,EAAMK,OAAO,EAAG,GAChBP,EAAaI,KAAKF,EAAMxE,QAAO,SAACE,EAAGD,GAAJ,OAAYC,EAAID,IAAK,IAItDiD,OAAOC,KAAKkB,EAAUnD,WAAWkC,SAAQ,SAAAlD,GACvCmE,EAAUnD,UAAUhB,GAAGJ,UAAYwE,EAAaQ,SAIlD,IAAMC,EAAqB,IAAIzE,MAAM,IAClC0E,MAAK,EAAM,EAAG,GACdA,MAAK,EAAO,EAAG,IAUlB,OAPA9B,OAAOC,KAAKkB,EAAU5C,QAAQ2B,SAAQ,SAAAlD,GACpCmE,EAAU5C,OAAOvB,GAAGuD,aAAesB,EAAmBF,OACpD1E,KAAKC,MAAMD,KAAKwE,SAAWI,EAAmBE,OAAS,GACvD,GACA,MAGGZ,I,yjBCjCX,IAIMa,EAAe,CACpBC,cAAenE,IAAYN,aAIf0E,EAAiB,CAC7BC,cAAe,gBAAG5F,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,QAApB,OAAkC,SAAC2F,GACjDA,EAAS,CAAEC,KAXW,kBAWYC,SAAU,UAAW/F,OAAMC,YAAWC,cAEzE8F,YAAa,gBAAGhG,EAAH,EAAGA,KAAME,EAAT,EAASA,QAASiC,EAAlB,EAAkBA,aAAlB,OAAqC,SAAC0D,GAClDA,EAAS,CAAEC,KAdW,kBAcYC,SAAU,QAAS/F,OAAME,UAASiC,mBAErE8D,WAAY,gBAAGjG,EAAH,EAAGA,KAAME,EAAT,EAASA,QAASiC,EAAlB,EAAkBA,aAAlB,OAAqC,SAAC0D,GACjDA,EAAS,CAAEC,KAjBW,kBAiBYC,SAAU,OAAQ/F,OAAME,UAASiC,mBAEpE+D,uBAAwB,gBAAG5C,EAAH,EAAGA,iBAAH,OAA0B,SAAAuC,GACjDA,EAAS,CAAEC,KApBW,kBAoBYC,SAAU,mBAAoBzC,uBAEjE6C,SAAU,kBAAM,SAAAN,GACfA,EAAS,CAAEC,KAtBa,yBA2BbM,EAAU,SAACC,EAAOC,GAG9B,OAFAD,EAAQA,GAASZ,EAETa,EAAOR,MACd,IAhCsB,kBAiCrB,IAAMS,EAAQhF,EAAU8E,EAAMX,eAE9B,OAAQY,EAAOP,UACd,IAAK,eACmBS,IAAnBF,EAAOpG,UAAuBqG,EAAM9E,UAAU6E,EAAOtG,MAAMM,QAAUgG,EAAOpG,cACvDsG,IAArBF,EAAOrG,YAAyBsG,EAAM9E,UAAU6E,EAAOtG,MAAMK,UAAYiG,EAAOrG,WACpF,MACD,IAAK,wBAC4BuG,IAA5BF,EAAOhD,mBAAgCiD,EAAMjD,iBAAiB1C,WAAa0F,EAAOhD,kBACtF,MACD,IAAK,aACmBkD,IAAnBF,EAAOpG,UAAuBqG,EAAMvE,OAAOsE,EAAOtG,MAAMM,QAAUgG,EAAOpG,cACjDsG,IAAxBF,EAAOnE,eAA4BoE,EAAMvE,OAAOsE,EAAOtG,MAAMgE,aAAesC,EAAOnE,cACvF,MACD,IAAK,YACmBqE,IAAnBF,EAAOpG,UAAuBqG,EAAMlD,MAAMiD,EAAOtG,MAAMM,QAAUgG,EAAOpG,cAChDsG,IAAxBF,EAAOnE,eAA4BoE,EAAMlD,MAAMiD,EAAOtG,MAAMgE,aAAesC,EAAOnE,cAMxF,OAAO,EAAP,GAAYkE,EAAZ,CAAmBX,cAAea,EAAMtF,cACzC,IAvDwB,oBAwDvB,OAAO,EAAP,GAAYoF,EAAZ,CAAmBX,cAAehB,EAAWC,uBAAuB1D,cACrE,QACC,OAAOoF,I,gBCvDJI,E,iLAEF,OACE,kBAAC,IAAMC,SAAP,KACE,4BAAQC,QAASvG,KAAKwG,MAAMT,UAA5B,YACA,kBAAC,EAAD,CACE1E,UAAWrB,KAAKwG,MAAMlB,cAAcjE,UACpC6B,iBAAkBlD,KAAKwG,MAAMlB,cAAcpC,iBAC3CtB,OAAQ5B,KAAKwG,MAAMlB,cAAc1D,OACjCqB,MAAOjD,KAAKwG,MAAMlB,cAAcrC,MAChC2C,YAAa5F,KAAKwG,MAAMZ,YACxBC,WAAY7F,KAAKwG,MAAMX,WACvBL,cAAexF,KAAKwG,MAAMhB,cAC1BM,uBAAwB9F,KAAKwG,MAAMV,8B,GAbnBW,aAoBpBC,E,iLAEF,OACE,kBAAC,IAAMJ,SAAP,KACE,kBAAC,EAAD,CACHpD,iBAAkBlD,KAAKwG,MAAMtD,iBAC7B4C,uBAAwB9F,KAAKwG,MAAMV,yBAEhC,kBAAC,EAAD,CACEzE,UAAWrB,KAAKwG,MAAMnF,UACtBmE,cAAexF,KAAKwG,MAAMhB,gBAE5B,kBAAC,EAAD,CACE5D,OAAQ5B,KAAKwG,MAAM5E,OACnBgE,YAAa5F,KAAKwG,MAAMZ,cAE1B,kBAAC,EAAD,CACE3C,MAAOjD,KAAKwG,MAAMvD,MAClB4C,WAAY7F,KAAKwG,MAAMX,kB,GAlBAc,IAAMC,eAyBjCC,E,2MACLC,cAAgB,SAAAC,GACbA,EAAMC,iBACN,EAAKR,MAAMV,uBAAuB,CAChC5C,iBAAkB+D,SAASF,EAAMG,OAAOnH,U,wEAI1C,OACE,kBAAC,EAAD,CACEoH,eAAe,oBACfC,oBACE,2BACEC,UAAU,2BACV3B,KAAK,SACL3F,MAAOC,KAAKwG,MAAMtD,iBAClBoE,SAAUtH,KAAK8G,cACfS,IAAI,KACJC,IAAI,Y,GAlBwBb,IAAMC,eA0BxCa,E,iLACM,IAAD,OACP,OACE,kBAAC,EAAD,CACEN,eAAe,SACfC,oBAAqB/D,OAAOC,KAAKtD,KAAKwG,MAAM5E,QAAQ8F,KAAI,SAAArH,GACtD,IAAMsH,EAAQ,EAAKnB,MAAM5E,OAAOvB,GAChC,OACE,kBAAC,EAAD,CACEuH,IAAKvH,EACLT,KAAMS,EACNU,SAAU4G,EAAM5G,SAChBgB,aAAc4F,EAAM5F,aACpB6D,YAAa,EAAKY,MAAMZ,uB,GAbRe,IAAMC,eAsB9B7C,E,iLACM,IAAD,OACP,OACE,yBACEwC,QAAS,WACP,EAAKC,MAAMZ,YAAY,CACrBhG,KAAM,EAAK4G,MAAM5G,KACjBmC,cAAe,EAAKyE,MAAMzE,iBAI7B/B,KAAKwG,MAAMzE,aACV,kBAAC,IAAD,CAAM8F,KAAK,gBAEX,kBAAC,IAAD,CAAMA,KAAK,WACV,IACF7H,KAAKwG,MAAM5G,KAAM,IACjBI,KAAKwG,MAAMzF,UAAY,EAAvB,WACOf,KAAKwG,MAAMzF,UADlB,UAEMf,KAAKwG,MAAMzF,e,GAnBN4F,IAAMC,eAyBpBkB,E,iLAEF,OACE,kBAAC,IAAD,CAAMT,UAAU,uBACd,wBAAIA,UAAU,oBAAoBrH,KAAKwG,MAAMW,gBAC7C,yBAAKE,UAAU,kBAAkBrH,KAAKwG,MAAMY,0B,GALnBT,IAAMC,eAWjCmB,E,iLACM,IAAD,OACP,OACE,kBAAC,EAAD,CACEZ,eAAe,YACfC,oBAAqB/D,OAAOC,KAAKtD,KAAKwG,MAAMnF,WAAWqG,KAAI,SAAArH,GACzD,IAAM2H,EAAU,EAAKxB,MAAMnF,UAAUhB,GACrC,OACE,kBAAC,EAAD,CACEuH,IAAKvH,EACLT,KAAMS,EACNS,WAAYkH,EAAQlH,WACpBC,SAAUiH,EAAQjH,SAClByE,cAAe,EAAKgB,MAAMhB,yB,GAbPmB,IAAMC,eAsBjCjH,E,2MACJmH,cAAgB,SAAAC,GACdA,EAAMC,iBACN,EAAKR,MAAMhB,cAAc,CACvB5F,KAAM,EAAK4G,MAAM5G,KACjBC,UAAWoH,SAASF,EAAMG,OAAOnH,U,wEAInC,OACE,6BACGC,KAAKwG,MAAM5G,KAAM,IAClB,2BACEyH,UAAU,2BACV3B,KAAK,SACL3F,MAAOC,KAAKwG,MAAM1F,WAClBwG,SAAUtH,KAAK8G,cACfS,IAAI,KACJC,IAAI,MACH,IACFxH,KAAKwG,MAAMzF,UAAY,EAAvB,WACOf,KAAKwG,MAAMzF,UADlB,UAEMf,KAAKwG,MAAMzF,e,GAtBJ4F,IAAMC,eA4BtBqB,E,iLACM,IAAD,OACP,OACE,kBAAC,EAAD,CACEd,eAAe,QACfC,oBAAqB/D,OAAOC,KAAKtD,KAAKwG,MAAMvD,OAAOyE,KAAI,SAAArH,GACrD,IAAM6H,EAAO,EAAK1B,MAAMvD,MAAM5C,GAC9B,OACE,kBAAC,EAAD,CACEuH,IAAKvH,EACLT,KAAMS,EACNS,WAAYoH,EAAKpH,WACjBC,SAAUmH,EAAKnH,SACfgB,aAAcmG,EAAKnG,aACnB8D,WAAY,EAAKW,MAAMX,sB,GAdRc,IAAMC,eAuB7B3C,E,wLACY8C,GACdA,EAAMC,iBACNhH,KAAKwG,MAAMX,WAAW,CACpBjG,KAAMI,KAAKwG,MAAM5G,KACjBmC,cAAe/B,KAAKwG,MAAMzE,iB,+BAGpB,IAAD,OACP,OACE,yBACEwE,QAAS,kBACP,EAAKC,MAAMX,WAAW,CACpBjG,KAAM,EAAK4G,MAAM5G,KACjBmC,cAAe,EAAKyE,MAAMzE,iBAI7B/B,KAAKwG,MAAMzE,aACV,kBAAC,IAAD,CAAM8F,KAAK,gBAEX,kBAAC,IAAD,CAAMA,KAAK,WACV,IACF7H,KAAKwG,MAAM5G,KAAM,IACjBI,KAAKwG,MAAMzF,UAAY,EAAvB,WACOf,KAAKwG,MAAMzF,UACff,KAAKwG,MAAMzF,c,GA1BJ4F,IAAMC,eAgCVuB,eAGb,SAAAlC,GAAK,OAAIA,EAAMmC,sBAIf,SAAA3C,GAAQ,OAAI4C,YAAmB9C,EAAgBE,KAPlC0C,CAQb9B,G,MC7OaiC,MARf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,QCIckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kPCiBN,IACeC,EA7Bf,SAAwBxG,EAASiD,GAC7B,IAAMwD,EAAW,CAEbT,mBAAoBU,GAGlBC,EAAa,CACfC,KAUEC,EAAcC,Y,yVAAgB,IAC7BL,IAGP,OAAOM,YACHF,EACA5D,EACA+D,IAAe,WAAf,EAAmBL,IAIbM,CAAeC,cAAwBd,OAAOe,mBCd5DC,IAASC,OACL,kBAAC,IAAD,CAAUb,MAAOA,GACb,kBAAC,EAAD,OAEFc,SAASC,eAAe,SFwGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b113249e.chunk.js","sourcesContent":["export default function Ability ({name = '', baseValue = 10, bonuses = []} = {}) {\n  if ( typeof name !== 'string' ){\n  }\n  return {\n    get BaseValue() {\n      return baseValue;\n    },\n    set BaseValue(value) {\n      baseValue = value;\n    },\n    get FinalValue() {\n      return this.BaseValue + this.Bonuses.reduce((sum, e) => sum + e, 0);\n    },\n    get Modifier() {\n      return Math.floor(this.FinalValue / 2) - 5;\n    },\n    get Bonuses() {\n        return bonuses\n    },\n    set Bonuses(value)\n    {\n      if(!Array.isArray(value)) {\n        console.log(\"new bonuses value is not an array\")\n      }\n      bonuses = value\n    },\n    get Name() {\n      return name\n    },\n    serialize() {\n      return {\n        baseValue: this.BaseValue,\n        bonuses: this.Bonuses,\n        finalValue: this.FinalValue,\n        modifier: this.Modifier\n      }\n    }\n  }\n}","export default function ProficiencyBonus({value = 0} = {}) {\n  return {\n    get FinalValue() {\n      return value;\n    },\n    set FinalValue(_value) {\n      if (! typeof _value === \"number\") {\n        console.log(\"prof bonus value NAN\")\n        return\n      }\n      if (_value < 0) {\n        console.log('prof bonus value is negative')\n        return\n      }\n      value = _value;\n    }\n  };\n}","import getInitialState from \"./InitialState\"\nimport Skill from \"./Skill\"\nimport Save from \"./Save\"\nimport Ability from \"./Ability\"\nimport ProficiencyBonus from \"./ProficiencyBonus\"\n\nexport default function Character(oldState = getInitialState()) {\n  // validate args\n\n  // wrap incoming data\n  const wrapper = {};\n\n  // wrap abilities\n  wrapper.abilities = {};\n  Object.keys(oldState.abilities).forEach(e => {\n    const oldAbility = oldState.abilities[e]\n    wrapper.abilities[e] = Ability({\n      name: e,\n      baseValue: oldAbility.baseValue,\n      bonuses: oldAbility.bonuses\n    });\n  });\n\n  // wrap proficiency bonus\n  wrapper.proficiencyBonus = ProficiencyBonus({value: oldState.proficiencyBonus});\n\n  // wrap skills\n  wrapper.skills = {};\n  Object.keys(oldState.skills).forEach(e => {\n    const oldSkill = oldState.skills[e];\n    wrapper.skills[e] = Skill({\n      name: e,\n      bonuses: oldSkill.bonuses,\n      isProficient: oldSkill.isProficient,\n\n      // These depend on previously set wrapper attributes\n      derivedProficiency: wrapper.proficiencyBonus,\n      derivedAbility: wrapper.abilities[oldSkill.derivedAbility]\n    });\n  });\n\n  // wrap saves\n  wrapper.saves = {}\n  // console.log(oldState.saves)\n  Object.keys(oldState.saves).forEach( e => {\n    const oldSave = oldState.saves[e]\n    wrapper.saves[e] = Save({\n      name: e,\n      bonuses: oldSave.bonuses,\n      isProficient: oldSave.isProficient,\n\n      // these depend on previously set wrapper attributes\n      derivedProficiency: wrapper.proficiencyBonus,\n      derivedAbility: wrapper.abilities[e] // saves and abilities share the same name\n    })\n  })\n\n  // serialization function\n  wrapper.serialize =  function(){\n    const returnData = {};\n    returnData.proficiencyBonus = this.proficiencyBonus.FinalValue;\n    returnData.abilities = {};\n    Object.keys(this.abilities).forEach(abilityName => {\n      returnData.abilities[abilityName] = this.abilities[\n        abilityName\n      ].serialize();\n    });\n    returnData.skills = {};\n    Object.keys(this.skills).forEach(skillName => {\n      returnData.skills[skillName] = this.skills[skillName].serialize();\n    });\n    returnData.saves = {}\n    Object.keys(this.saves).forEach(saveName => {\n      returnData.saves[saveName] = this.saves[saveName].serialize()\n    })\n    return returnData;\n  }\n\n  // return mutated data\n  return wrapper\n}\n\n\n\nexport {\n  Skill as skill,\n  Ability as ability,\n  ProficiencyBonus as proficiency,\n  Save as save\n}\n","export default function getInitialState() {\n  return {\n    abilities: {\n      strength: { bonuses: [], baseValue: 10, finalValue: 10, modifier: 0 },\n      dexterity: { bonuses: [], finalValue: 10, modifier: 0, baseValue: 10 },\n      intelligence: { bonuses: [], finalValue: 10, modifier: 0, baseValue: 10 },\n      constitution: { bonuses: [], finalValue: 10, modifier: 0, baseValue: 10 },\n      charisma: { bonuses: [], finalValue: 10, modifier: 0, baseValue: 10 },\n      wisdom: { bonuses: [], finalValue: 10, modifier: 0, baseValue: 10 }\n    },\n    skills: {\n      athletics: { derivedAbility: \"strength\", isProficient: false, modifier: 0 },\n      acrobatics: { derivedAbility: \"dexterity\", isProficient: false, modifier: 0 },\n      sleight_of_hand: {\n        derivedAbility: \"dexterity\",\n        isProficient: false,\n        modifier: 0\n      },\n      stealth: { derivedAbility: \"dexterity\", isProficient: false, modifier: 0 },\n      arcana: { derivedAbility: \"intelligence\", isProficient: false, modifier: 0 },\n      history: { derivedAbility: \"intelligence\", isProficient: false, modifier: 0 },\n      investigation: {\n        derivedAbility: \"intelligence\",\n        isProficient: false,\n        modifier: 0\n      },\n      nature: { derivedAbility: \"intelligence\", isProficient: false, modifier: 0 },\n      religion: { derivedAbility: \"intelligence\", isProficient: false, modifier: 0 },\n      animal_handling: { derivedAbility: \"wisdom\", isProficient: false, modifier: 0 },\n      insight: { derivedAbility: \"wisdom\", isProficient: false, modifier: 0 },\n      medicine: { derivedAbility: \"wisdom\", isProficient: false, modifier: 0 },\n      perception: { derivedAbility: \"wisdom\", isProficient: false, modifier: 0 },\n      survival: { derivedAbility: \"wisdom\", isProficient: false, modifier: 0 },\n      deception: { derivedAbility: \"charisma\", isProficient: false, modifier: 0 },\n      intimidation: { derivedAbility: \"charisma\", isProficient: false, modifier: 0 },\n      performance: { derivedAbility: \"charisma\", isProficient: false, modifier: 0 },\n      persuasion: { derivedAbility: \"charisma\", isProficient: false, modifier: 0 }\n    },\n    saves: {\n      strength: {\n        bonuses: [],\n        baseValue: 10,\n        finalValue: 10,\n        isProficient: false,\n        modifier: 0\n      },\n      dexterity: {\n        bonuses: [],\n        finalValue: 10,\n        modifier: 0,\n        isProficient: false,\n        baseValue: 10\n      },\n      intelligence: {\n        bonuses: [],\n        finalValue: 10,\n        modifier: 0,\n        isProficient: false,\n        baseValue: 10\n      },\n      constitution: {\n        bonuses: [],\n        finalValue: 10,\n        modifier: 0,\n        isProficient: false,\n        baseValue: 10\n      },\n      charisma: {\n        bonuses: [],\n        finalValue: 10,\n        modifier: 0,\n        isProficient: false,\n        baseValue: 10\n      },\n      wisdom: {\n        bonuses: [],\n        finalValue: 10,\n        modifier: 0,\n        isProficient: false,\n        baseValue: 10\n      }\n    },\n    proficiencyBonus: 3,\n    proficiencySelections: 0\n  };\n}","import Ability from \"./Ability\"\nimport ProficiencyBonus from \"./ProficiencyBonus\"\n\nexport default function Skill ({\n  name = '',\n  bonuses = [],\n  isProficient = false,\n  derivedAbility = Ability(),\n  derivedProficiency = ProficiencyBonus()\n} = {}) {\n  return {\n    set Bonuses(value) {\n      bonuses = value;\n    },\n    get Bonuses() {\n      return bonuses;\n    },\n    set IsProficient(value) {\n      isProficient = value;\n    },\n    get IsProficient() {\n      return isProficient;\n    },\n\n    // immutable\n    get Name() {\n      return name;\n    },\n\n    // derived data\n    get FinalValue() {\n      const profBonus = (this.IsProficient)? derivedProficiency.FinalValue : 0\n      return derivedAbility.FinalValue +\n        this.Bonuses.reduce((sum, e) => e + sum, 0) + profBonus\n    },\n    get Modifer() {\n      return Math.floor(this.FinalValue / 2) - 5;\n    },\n    serialize() {\n      return {\n        bonuses: this.Bonuses,\n        isProficient: this.IsProficient,\n        finalValue: this.FinalValue,\n        modifier: this.Modifer,\n        name: this.Name,\n        derivedAbility: derivedAbility.Name\n      };\n    }\n  };\n}","import Ability from \"./Ability\"\nimport ProficiencyBonus from \"./ProficiencyBonus\"\n\nexport default function Save ({\n  name = '',\n  bonuses = [],\n  isProficient = false,\n  derivedAbility = Ability(),\n  derivedProficiency = ProficiencyBonus()\n} = {}) {\n  return {\n    set Bonuses(value) {\n      bonuses = value;\n    },\n    get Bonuses() {\n      return bonuses;\n    },\n    set IsProficient(value) {\n      isProficient = value;\n    },\n    get IsProficient() {\n      return isProficient;\n    },\n\n    // immutable\n    get Name() {\n      return name;\n    },\n\n    // derived data\n    get FinalValue() {\n      const profBonus = (this.IsProficient)? derivedProficiency.FinalValue : 0\n      return derivedAbility.FinalValue +\n        this.Bonuses.reduce((sum, e) => e + sum, 0) + profBonus\n    },\n    get Modifer() {\n      return Math.floor(this.FinalValue / 2) - 5;\n    },\n    serialize() {\n      return {\n        bonuses: this.Bonuses,\n        isProficient: this.IsProficient,\n        finalValue: this.FinalValue,\n        modifier: this.Modifer,\n        name: this.Name,\n        derivedAbility: derivedAbility.Name\n      };\n    }\n  };\n}","import Character from \"../models/DnDCharacter/DnDCharacter\";\n\nconst Generators = {\n  generateDnDCharacter: () => {\n    // init character object\n    const character = Character();\n\n    // generate ability array\n    const abilityRolls = [];\n    for (let i = 0; i < 6; i++) {\n      let rolls = [];\n      for (let j = 0; j < 4; j++) {\n        rolls.push(Math.floor(Math.random() * 5) + 1);\n      }\n      rolls.sort();\n      rolls.splice(0, 1);\n      abilityRolls.push(rolls.reduce((e, sum) => e + sum, 0));\n    }\n\n    // Apply random ability rolls to each character ability\n    Object.keys(character.abilities).forEach(e => {\n      character.abilities[e].BaseValue = abilityRolls.pop();\n    });\n\n    // randomly select 5 skill proficiencies\n    const skillProficiencies = new Array(18)\n      .fill(true, 0, 5)\n      .fill(false, 5, 18);\n\n    // apply skill proficiencies randomly\n    Object.keys(character.skills).forEach(e => {\n      character.skills[e].IsProficient = skillProficiencies.splice(\n        Math.floor(Math.random() * skillProficiencies.length - 1),\n        1\n      )[0];\n    });\n\n    return character;\n  }\n};\n\nexport default Generators;\n","import Character from \"../models/DnDCharacter/DnDCharacter\"\nimport Generators from \"../utils/Generators\"\n\n// declare const action types\nconst updateCharacter = \"updatecharacter\"\nconst generateCharacter = \"generateCharacter\"\n\n// declare initial state\nconst initialState = {\n\tcharacterData: Character().serialize()\n}\n\n// declare/export action creators\nexport const actionCreators = {\n\tupdateAbility: ({ name, baseValue, bonuses }) => (dispatch) => {\n\t\tdispatch({ type: updateCharacter, toUpdate: \"ability\", name, baseValue, bonuses })\n\t},\n\tupdateSkill: ({ name, bonuses, isProficient }) => (dispatch) => {\n\t\tdispatch({ type: updateCharacter, toUpdate: 'skill', name, bonuses, isProficient })\n\t},\n\tupdateSave: ({ name, bonuses, isProficient }) => (dispatch) => {\n\t\tdispatch({ type: updateCharacter, toUpdate: 'save', name, bonuses, isProficient })\n\t},\n\tupdateProficiencyBonus: ({ proficiencyBonus }) => dispatch => {\n\t\tdispatch({ type: updateCharacter, toUpdate: 'proficiencyBonus', proficiencyBonus })\n\t},\n\tgenerate: () => dispatch => {\n\t\tdispatch({ type: generateCharacter })\n\t}\n};\n\n// declare/export reducer for this sub-store\nexport const reducer = (state, action) => {\n\tstate = state || initialState;\n\n\tswitch (action.type) {\n\t\tcase updateCharacter:\n\t\t\tconst model = Character(state.characterData)\n\n\t\t\tswitch (action.toUpdate) {\n\t\t\t\tcase \"ability\":\n\t\t\t\t\tif (action.bonuses !== undefined) model.abilities[action.name].Bonuses = action.bonuses\n\t\t\t\t\tif (action.baseValue !== undefined) model.abilities[action.name].BaseValue = action.baseValue\n\t\t\t\t\tbreak\n\t\t\t\tcase \"proficiencyBonus\":\n\t\t\t\t\tif (action.proficiencyBonus !== undefined) model.proficiencyBonus.FinalValue = action.proficiencyBonus\n\t\t\t\t\tbreak\n\t\t\t\tcase \"skill\":\n\t\t\t\t\tif (action.bonuses !== undefined) model.skills[action.name].Bonuses = action.bonuses\n\t\t\t\t\tif (action.isProficient !== undefined) model.skills[action.name].IsProficient = action.isProficient\n\t\t\t\t\tbreak\n\t\t\t\tcase \"save\":\n\t\t\t\t\tif (action.bonuses !== undefined) model.saves[action.name].Bonuses = action.bonuses\n\t\t\t\t\tif (action.isProficient !== undefined) model.saves[action.name].IsProficient = action.isProficient\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\treturn { ...state, characterData: model.serialize() }\n\t\tcase generateCharacter:\n\t\t\treturn { ...state, characterData: Generators.generateDnDCharacter().serialize() }\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n// import action creators for reference in this component\nimport { actionCreators } from \"../store/CharacterStore\";\n\nimport { Card, Icon } from \"@blueprintjs/core\";\n\nclass StoreTester extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={this.props.generate}>Generate</button>\n        <CharacterContainer\n          abilities={this.props.characterData.abilities}\n          proficiencyBonus={this.props.characterData.proficiencyBonus}\n          skills={this.props.characterData.skills}\n          saves={this.props.characterData.saves}\n          updateSkill={this.props.updateSkill}\n          updateSave={this.props.updateSave}\n          updateAbility={this.props.updateAbility}\n          updateProficiencyBonus={this.props.updateProficiencyBonus}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nclass CharacterContainer extends React.PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        <ProficiencyBonusContainer\n\t\t\t\t\tproficiencyBonus={this.props.proficiencyBonus}\n\t\t\t\t\tupdateProficiencyBonus={this.props.updateProficiencyBonus}\n        />\n        <AbilitiesContainer\n          abilities={this.props.abilities}\n          updateAbility={this.props.updateAbility}\n        />\n        <SkillsContainer\n          skills={this.props.skills}\n          updateSkill={this.props.updateSkill}\n        />\n        <SavesContainer\n          saves={this.props.saves}\n          updateSave={this.props.updateSave}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nclass ProficiencyBonusContainer extends React.PureComponent {\n\tonValueChange = event => {\n    event.preventDefault();\n    this.props.updateProficiencyBonus({\n      proficiencyBonus: parseInt(event.target.value)\n    });\n  };\n  render() {\n    return (\n      <AttributeContainer\n        attributeTitle=\"Proficiency Bonus\"\n        attributeCollection={\n          <input\n            className=\"ability-base-value-input\"\n            type=\"number\"\n            value={this.props.proficiencyBonus}\n            onChange={this.onValueChange}\n            max=\"20\"\n            min=\"0\"\n          />\n        }\n      />\n    );\n  }\n}\n\nclass SkillsContainer extends React.PureComponent {\n  render() {\n    return (\n      <AttributeContainer\n        attributeTitle=\"Skills\"\n        attributeCollection={Object.keys(this.props.skills).map(e => {\n          const skill = this.props.skills[e];\n          return (\n            <Skill\n              key={e}\n              name={e}\n              modifier={skill.modifier}\n              isProficient={skill.isProficient}\n              updateSkill={this.props.updateSkill}\n            />\n          );\n        })}\n      />\n    );\n  }\n}\n\nclass Skill extends React.PureComponent {\n  render() {\n    return (\n      <div\n        onClick={() => {\n          this.props.updateSkill({\n            name: this.props.name,\n            isProficient: !this.props.isProficient\n          });\n        }}\n      >\n        {this.props.isProficient ? (\n          <Icon icon=\"tick-circle\" />\n        ) : (\n          <Icon icon=\"circle\" />\n        )}{\" \"}\n        {this.props.name}{\" \"}\n        {this.props.modifier >= 0\n          ? `+${this.props.modifier}`\n          : `${this.props.modifier}`}\n      </div>\n    );\n  }\n}\n\nclass AttributeContainer extends React.PureComponent {\n  render() {\n    return (\n      <Card className=\"attribute-container\">\n        <h3 className=\"attribute-header\">{this.props.attributeTitle}</h3>\n        <div className=\"attribute-list\">{this.props.attributeCollection}</div>\n      </Card>\n    );\n  }\n}\n\nclass AbilitiesContainer extends React.PureComponent {\n  render() {\n    return (\n      <AttributeContainer\n        attributeTitle=\"Abilities\"\n        attributeCollection={Object.keys(this.props.abilities).map(e => {\n          const ability = this.props.abilities[e];\n          return (\n            <Ability\n              key={e}\n              name={e}\n              finalValue={ability.finalValue}\n              modifier={ability.modifier}\n              updateAbility={this.props.updateAbility}\n            />\n          );\n        })}\n      />\n    );\n  }\n}\n\nclass Ability extends React.PureComponent {\n  onValueChange = event => {\n    event.preventDefault();\n    this.props.updateAbility({\n      name: this.props.name,\n      baseValue: parseInt(event.target.value)\n    });\n  };\n  render() {\n    return (\n      <div>\n        {this.props.name}{\" \"}\n        <input\n          className=\"ability-base-value-input\"\n          type=\"number\"\n          value={this.props.finalValue}\n          onChange={this.onValueChange}\n          max=\"20\"\n          min=\"0\"\n        />{\" \"}\n        {this.props.modifier >= 0\n          ? `+${this.props.modifier}`\n          : `${this.props.modifier}`}\n      </div>\n    );\n  }\n}\n\nclass SavesContainer extends React.PureComponent {\n  render() {\n    return (\n      <AttributeContainer\n        attributeTitle=\"Saves\"\n        attributeCollection={Object.keys(this.props.saves).map(e => {\n          const save = this.props.saves[e];\n          return (\n            <Save\n              key={e}\n              name={e}\n              finalValue={save.finalValue}\n              modifier={save.modifier}\n              isProficient={save.isProficient}\n              updateSave={this.props.updateSave}\n            />\n          );\n        })}\n      />\n    );\n  }\n}\n\nclass Save extends React.PureComponent {\n  flipProficiency(event) {\n    event.preventDefault();\n    this.props.updateSave({\n      name: this.props.name,\n      isProficient: !this.props.isProficient\n    });\n  }\n  render() {\n    return (\n      <div\n        onClick={() =>\n          this.props.updateSave({\n            name: this.props.name,\n            isProficient: !this.props.isProficient\n          })\n        }\n      >\n        {this.props.isProficient ? (\n          <Icon icon=\"tick-circle\" />\n        ) : (\n          <Icon icon=\"circle\" />\n        )}{\" \"}\n        {this.props.name}{\" \"}\n        {this.props.modifier >= 0\n          ? `+${this.props.modifier}`\n          : this.props.modifier}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  // which part of global state does\n  // component recieve as props?\n  state => state.characterGenerator,\n\n  // which action creators does\n  // component receive as props?\n  dispatch => bindActionCreators(actionCreators, dispatch)\n)(StoreTester);\n","import React from 'react';\nimport StoreTester from './components/StoreTester'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StoreTester />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { createBrowserHistory } from 'history'\n\n// import individual reducers\nimport * as CharacterGenerator from './CharacterStore'\nimport thunk from 'redux-thunk'\n\nfunction configureStore(history, initialState) {\n    const reducers = {\n        // name: ImportName.reducer\n        characterGenerator: CharacterGenerator.reducer\n    }\n\n    const middleware = [\n        thunk\n    ]\n\n    // in development, use browser's Redux dev tools extensions if installed\n    const enhancers = []\n    const isDevelopment = process.env.NODE_ENV === 'development'\n    if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\n        enhancers.push(window.devToolsExtension())\n    }\n\n    const rootReducer = combineReducers({\n        ...reducers\n    })\n\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(...middleware)\n    )\n}\n\nconst store = configureStore(createBrowserHistory(), window.initialReduxState)\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\n// import configureStore from './store/configureStore'\n// import { createBrowserHistory } from 'history'\n\nimport store from './store/configureStore'\n\n// create browser history to use in the redux store\n// const baseUrl = document.getElementsByTagName('base')[0].getAttribute('href')\n// const history = createBrowserHistory()\n\n// get application-wide store instance,\n// populate with state from the server where available\n// const initialState = window.initialReduxState;\n// const store = configureStore(history, initialState)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}